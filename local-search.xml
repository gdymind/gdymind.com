<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kubernetes从零开始</title>
    <link href="/2021/04/24/Kubernetes%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    <url>/2021/04/24/Kubernetes%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/</url>
    
    <content type="html"><![CDATA[<p><em>本篇blog记录本人学习Kubernetes的全过程，参考资料为<a href="https://kubernetes.io/docs">官方教程</a>。</em></p><h2 id="Kuberfnetes是什么"><a href="#Kuberfnetes是什么" class="headerlink" title="Kuberfnetes是什么"></a>Kuberfnetes是什么</h2><p>本节我们介绍Kubernetes中的若干基本概念，包括control plane, node和could controller manager。</p><p>Kubernetes是用来管理<strong>container</strong>的，container和虚拟机（VM）功能类似，但是更加轻量。</p><blockquote><p>Similar to a VM, a container has its own filesystem, share of CPU, memory, process space, and more. As they are decoupled from the underlying infrastructure, they are portable across clouds and OS distributions.</p></blockquote><p>各个部署方式的示意图如下：</p><p><img src="/img/image-20210425173818586.png" alt="部署方式"></p><p>可以看到，VM有自己的OS，一个虚拟的完整系统，而container是在OS的上层部署的。</p><p>一些基本概念：</p><ol><li><strong>Node</strong>：一个节点，每个node可以是一台真实的计算机，也可以是一个虚拟机（Virtual machine）。</li><li><strong>Cluster</strong>：若干node的集合，一个cluster可以只有一个node。</li><li><strong>Pods</strong>：Cluster中运行的若干container的集合。</li><li><strong>Control plane</strong>：Control plane用于管理node和Pods。</li></ol><h3 id="Control-plane是什么"><a href="#Control-plane是什么" class="headerlink" title="Control plane是什么"></a>Control plane是什么</h3><p>Control plane用来做一些全局的决策，并对系统中发生的事件进行响应。理论上control plane可以部署在任何一台机器上，但习惯上所有control plane都会集中部署在一台机器上。</p><p>Control plane由以下几个部分组成：</p><ol><li><strong>kube-apiserver</strong>：API server是Kubernetes的前端，它提供API与cluster交互，是control plane的主要部件。</li><li><strong>etcd</strong>：Kubernetes的后端，提供key-value store来存储cluster数据。</li><li><strong>kube-scheduler</strong>：给Pod分配node。</li><li><strong>kube-controller-manager</strong>：用于运行各种controller（后面会讲什么是controller），比如用于通知node挂掉了的controller。</li><li><strong>cloud-controller-manager</strong>：用于管理跟cloud相关的部分。</li></ol><h4 id="Controller是什么"><a href="#Controller是什么" class="headerlink" title="Controller是什么"></a>Controller是什么</h4><p>上面提到我们可以用kube-controller-manager管理controller，这里介绍一下controller是什么。</p><p>在自动化领域，<strong>control loop</strong>是一个不终止的负反馈调节过程，它控制着系统state的变化。举个例子，某间房屋需要维持特定的温度（desired state），可以让一个controller通过不断开关温度调节设备让房屋的当前温度（current state），从而不断靠近目标温度（desired state）。</p><p>Kubernetes中的controller同样会将cluster中的一些state维持在desired state附近。Controller可以通过API server控制，也可以直接控制。</p><h3 id="Node是什么"><a href="#Node是什么" class="headerlink" title="Node是什么"></a>Node是什么</h3><p>一个node既可以是一台真正的计算机，也可以是virtual machine。每个node中包含以下组件：</p><ol><li><strong>kubelet</strong>：确保所有container在Pod中成功运行。</li><li><strong>kube-proxy</strong>：node上的网络代理。</li><li><strong>Container runtime</strong>: 管理运行中的container，支持Docker, containerd, CRI-O等</li></ol><h4 id="Node的注册"><a href="#Node的注册" class="headerlink" title="Node的注册"></a>Node的注册</h4><p>我们有两种添加node的方法：</p><ol><li>使用kubelet向API server进行self-registration</li><li>手动添加</li></ol><p>Node被创建后，kube-apiserver会检查<code>metadata.name</code>是否匹配。name是该node的标识符，它必须是个DNS Subdomain，且必须唯一。之后，系统会<strong>不断检查</strong>该node是否成功运行了相关服务。当<strong>所有的</strong>相关服务都成功运行，该node才会被允许在Pod上运行。</p><p><strong>Self-registration</strong>：kubelet中<code>--register-node</code>的默认值为true（推荐用默认值），这代表kubelet会尝试向向control plane进行self-register。</p><p>Self-registration的相关选项有<code>--kubeconfig、</code> <code>--cloud-provider</code>、<code>--register-node</code>、<code>--register-with-taints</code>、<code>--node-ip</code>和<code>--node-labels</code>。</p><p><strong>手动添加</strong>：我们可以使用 kubectl这个命令行工具手动创建node，此时<code>--register-node</code>的值为false.</p><h4 id="Node的status"><a href="#Node的status" class="headerlink" title="Node的status"></a>Node的status</h4><p>使用以下命令查看node的status，包括node的Address、Condition（Ready/DiskPressure…）、Capacity and Allocatable（可用资源情况——CPU、内存、Pod数量）和Info（一些通用信息）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl describe node &lt;node name&gt;<br></code></pre></td></tr></table></figure><h4 id="Node-controller"><a href="#Node-controller" class="headerlink" title="Node controller"></a>Node controller</h4><p>Node controller属于<strong>control plane</strong>中controller的一种，它有三个作用：</p><ol><li>如果启用了CIDR分配，负责分配CIDR block。</li><li>如果用了cloud，保证Node controller里记录的node在cloud上都是可用的。如果不可用，则将其从记录里删除。</li><li>监控node的健康。</li></ol><h4 id="Heartbeats"><a href="#Heartbeats" class="headerlink" title="Heartbeats"></a>Heartbeats</h4><p>Node需要不断发送hearbeat报告自己是否存活。有两种heartbeat——NodeStatus以及Lease对象，它们都由kubelet管理。其中，NodeStatus默认每5分钟更新一次，Lease默认每10秒更新一次。</p><h4 id="Reliability，Node-capacity，Node-topology、Graceful-node-shutdown"><a href="#Reliability，Node-capacity，Node-topology、Graceful-node-shutdown" class="headerlink" title="Reliability，Node capacity，Node topology、Graceful node shutdown"></a>Reliability，Node capacity，Node topology、Graceful node shutdown</h4><p>略</p><h3 id="Cloud-Controller-Manager是什么"><a href="#Cloud-Controller-Manager是什么" class="headerlink" title="Cloud Controller Manager是什么"></a>Cloud Controller Manager是什么</h3><p>Kubernetes致力于将管理cloud相关的功能与管理cluster本身的功能解耦。其中，与cloud相关的控制逻辑在control plance中的cloud-controller-manager（c-c-m）里实现。c-c-m以插件的形式存在，并与cloud提供者的API交互。</p><p><img src="/img/image-20210426004325961.png" alt="Kubernetes架构"></p><p>c-c-m包括以下controller：</p><ul><li><strong>Node controller</strong>：在cloud中创建node，记录could相关信息，获取node的hostname和network address，获取node的健康状态。</li><li><strong>Route controller</strong>：配置路由，使node间可以通信。</li><li><strong>Service controller</strong>：Service在若干Pods上运行，它将Pods对外暴露为network service。Cloud上会提供load balancing、network packet filtering之类的功能。我们使用service controller和could上这些功能的API交互。</li></ul><h2 id="基础操作入门"><a href="#基础操作入门" class="headerlink" title="基础操作入门"></a>基础操作入门</h2><h3 id="创建一个cluster"><a href="#创建一个cluster" class="headerlink" title="创建一个cluster"></a>创建一个cluster</h3><p>Cluster中包含两种资源，control plane和node。其中，</p><ul><li>Control plane用来管理cluster中的所有活动，我们使用Control plane中的API server与node进行交互。</li><li>每个Node是一台虚拟机或真实计算机。每个node中都有一个Kubelet，用来管理node，以及和control plane交互。Node中也需要支持container相关操作的工具，如containerd和Docker。</li></ul><p>示意图如下：</p><p><img src="/img//image-20210426114106766.png" alt="Control plane和node拓扑结构"></p><p>现在我们用Minikube来入门Kubernetes。Minikube比真正的Kubernetes简单，它会在<strong>本地</strong>创建只包含<strong>一个node</strong>的cluster。</p><p>使用以下命令启动minikube</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">minikube start<br></code></pre></td></tr></table></figure><p>我们使用kubectl来和Kubernetes交互，使用以下命令查看cluster信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl cluster-info<br></code></pre></td></tr></table></figure><p>使用以下命令查看node信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get nodes<br></code></pre></td></tr></table></figure><p><img src="/img//image-20210426115500808.png" alt="kubebtl命令"></p><h3 id="部署一个App"><a href="#部署一个App" class="headerlink" title="部署一个App"></a>部署一个App</h3><p>为了部署containerized application，我们需要配置<strong>Deployment controller</strong>。它告诉系统如何创建和更新app的实例，并且不断监视app所在的node的状态。当node不可用时，Deployment controller会在›可用的node中再次创建App的instance。</p><p><img src="/Users/huibingdong/Dropbox/Blog/source/img//image-20210426131755053.png" alt="Deployment controller"></p><p>我们仍然使用<strong>Kubectl</strong>创建Deployment。kubectl是一个命令行工具，它的基本</p><p>语法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs she">kubectl &lt;action&gt; &lt;resource&gt;<br></code></pre></td></tr></table></figure><p>其中，action是要执行的操作，如reate和describe；而resource指定了要操作的资源，如node和container。我们可以在每条kubectl命令后添加<code>--help</code>（如<code>kubectl get nodes --help</code>），来学习这条命令的参数。</p><p>使用以下命令创建Deployment：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl create deployment &lt;deployment name&gt; &lt;app image location&gt;<br></code></pre></td></tr></table></figure><p><img src="/Users/huibingdong/Dropbox/Blog/source/img//image-20210426133030093.png" alt="Deployment"></p><p>上图中，我们将新建的Deployment命名为kubernetes-bootcamap，并且指定了一个已有的app image。在执行这条命令时，Kubernetes做了以下几件事：</p><ol><li>找到可用的node</li><li>在node中部署app</li><li>进行了一些设置，使得当该node不再可用时，可以寻找新的可用node</li></ol><p>使用以下命令查看已有的Deployment：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get deployments<br></code></pre></td></tr></table></figure><p><img src="/Users/huibingdong/Dropbox/Blog/source/img//image-20210426133531772.png" alt="Deployment"></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>唐诗的升级之路</title>
    <link href="/2020/11/30/%E5%94%90%E8%AF%97%E7%9A%84%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    <url>/2020/11/30/%E5%94%90%E8%AF%97%E7%9A%84%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>第一篇博客来试试水，总结一下陈磊团队所著《半小时漫画唐诗》涉及的唐诗发展历程，另外穿插笔者的评论感想。</p></blockquote><div class="douban-card-block"><a class="douban-card" href="https://book.douban.com/subject/33441524"><div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s32322386.jpg');"></div><div class="douban-card-left"><div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s32322386.jpg');"></div></div><div class="douban-card-right" style="line-height: 1.7;"><div class="douban-card-item"><span>书名: </span><strong>半小时漫画唐诗</strong></div><div class="douban-card-item"><span>作者: </span><span>陈磊·半小时漫画团队</span></div><div class="douban-card-item"><span>出版年份: </span><span>2019-5-1</span></div><div class="douban-card-item"><span>评分: </span><span>7.2</span></div></div></a></div><style>.douban-card-block {display: flex;justify-content: center;align-items: center;width: 100%;max-height: 400px;}.douban-card {display: flex;margin: 30px 10px;padding: 15px;border-radius: 10px;position: relative;justify-content: center;align-items: center;overflow: hidden;color: antiquewhite;text-decoration: none;}.douban-card:hover {text-decoration: none;}.douban-card-bgimg {position: absolute;width: 115%;height: 115%;filter: blur(15px) brightness(0.6);background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;}.douban-card-left {position: relative;display: flex;flex-direction: column;align-items: center;}.douban-card-right {position: relative;display: flex;flex-direction: column;margin-left: 12px;font-size: 16px;font-family: 'Courier New', Courier, monospace;line-height: 1.3;color: antiquewhite;}.douban-card-item {margin-top: 4px;}</style><h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>诗词充当了古人的娱乐方式之一，作用类似于现在的流行歌曲。相比于官方的史书，诗词以<strong>个人</strong>视角<strong>侧面</strong>反映了历史的过眼云烟。本篇讲诗的发展历程，词的发展会另开一篇。</p><p>鲁迅说：诗是<strong>韵</strong>文，从劳动时发生的。民间流传了许多有韵律的的诗句，后来据说孔子整理成了中国第一本诗歌总集《诗经》，里面多为<strong>四言诗</strong>，之后出现了字数更自由的《楚辞》。这两部书的代表作《国风》和《离骚》分别是当时现实和浪漫主义的代表。到了汉代和魏晋南北朝，诗发展出了<strong>五言</strong>和<strong>七言</strong>。总结来说随着字数增加，<strong>诗的节奏感越来越丰富</strong>。与此同时，由于科举制的出现（初唐成为必考科目）以及国家命运的剧烈变化，诗歌的<strong>情感内涵也在加强</strong>。</p><blockquote><p><strong>古体诗与格律诗</strong>：影响节奏感的除了字数（句式）外，还有格律（格式和音调）。<strong>古体诗</strong>要求不高，读来顺口即可；而唐代形成的<strong>格律诗</strong>讲究<strong>押韵</strong>（某些句尾字韵母相同）和<strong>对仗</strong>（上下两句要求平仄相反，句式相同，词义相关）。如果想了解格律，可以参考清朝李渔写的《笠翁对韵》，下面放的是郭浩瑜的注解版：</p></blockquote><div class="douban-card-block"><a class="douban-card" href="https://book.douban.com/subject/33426466"><div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s32304196.jpg');"></div><div class="douban-card-left"><div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s32304196.jpg');"></div></div><div class="douban-card-right" style="line-height: 1.7;"><div class="douban-card-item"><span>书名: </span><strong>笠翁对韵</strong></div><div class="douban-card-item"><span>作者: </span><span>郭浩瑜译</span></div><div class="douban-card-item"><span>出版年份: </span><span>2019-4-1</span></div><div class="douban-card-item"><span>评分: </span><span>9.2</span></div></div></a></div><style>.douban-card-block {display: flex;justify-content: center;align-items: center;width: 100%;max-height: 400px;}.douban-card {display: flex;margin: 30px 10px;padding: 15px;border-radius: 10px;position: relative;justify-content: center;align-items: center;overflow: hidden;color: antiquewhite;text-decoration: none;}.douban-card:hover {text-decoration: none;}.douban-card-bgimg {position: absolute;width: 115%;height: 115%;filter: blur(15px) brightness(0.6);background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;}.douban-card-left {position: relative;display: flex;flex-direction: column;align-items: center;}.douban-card-right {position: relative;display: flex;flex-direction: column;margin-left: 12px;font-size: 16px;font-family: 'Courier New', Courier, monospace;line-height: 1.3;color: antiquewhite;}.douban-card-item {margin-top: 4px;}</style><h1 id="初唐"><a href="#初唐" class="headerlink" title="初唐"></a>初唐</h1><p>初唐四杰——王勃、杨炯、卢照邻和骆宾王——引领了唐诗最初的发展，使诗歌内容从描写<strong>宫廷</strong>生活转向了<strong>市井</strong>和<strong>边塞</strong>生活，初步扭转前朝遗留的弊病。四人都命途多舛，但分别留下了<a href="https://baike.baidu.com/item/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F/480325">《滕王阁序》</a>、<a href="https://baike.baidu.com/item/%E4%BB%8E%E5%86%9B%E8%A1%8C/7806182">《从军行》</a>、<a href="https://baike.baidu.com/item/%E9%95%BF%E5%AE%89%E5%8F%A4%E6%84%8F/4804">《长安古意》</a>和《咏鹅》等名篇。</p><p>初唐四杰之后，陈子昂发号召学习<strong>汉魏风骨</strong>，矫正了偏重格律、不重情感、华而不实的不良风气。最终，张若虚写出<a href="https://baike.baidu.com/item/%E6%98%A5%E6%B1%9F%E8%8A%B1%E6%9C%88%E5%A4%9C/1701">《春江花月夜》</a>，兼顾了<strong>格律</strong>和<strong>感情</strong>（诗中为思乡情）两条线，成为初唐集大成者。</p><blockquote><ul><li>落霞与孤鹜齐飞，秋水共长天一色。——王勃《滕王阁序》</li><li>宁为百夫长，胜作一书生。——杨炯《从军行》</li><li>得成比目何辞死，愿作鸳鸯不羡仙。——卢照邻《长安古意》</li><li>前不见古人，后不见来者。——陈子昂《登幽州台歌》</li><li>斜月沉沉藏海雾，碣石潇湘无限路。不知乘月几人归，落月摇情满江树。——张若虚《春江花月夜》</li></ul></blockquote><div class="note note-success">            <p>初唐对诗歌关于格律（形式）和情感（内涵）的讨论，让笔者联想到台湾女作家林奕含一个访谈中的片段（有兴趣可以观看下方视频）。在访谈中她对艺术中技巧和情感的关系不断发问，这也成了她短暂一生的心结。</p><blockquote><p>“我要讲的是中国的诗的传统，抒情诗的传统，讲的是诗经从情诗被后代学者超译误读成政治诗之前的那个传统。我们都知道’在心为志，发言为诗’，‘诗缘情而绮靡’，还有孔子说的’诗三百，一言以蔽之，曰思无邪’。</p><p>…我们明明都知道，一个人说出诗的时候，说出情诗的时候，说出情话的时候，他应该是言有所衷的，他是有‘志’的，他是有‘情’的，他应该是‘思无邪’。所以整个故事最让我痛苦的是：一个真正相信中文的人，怎么可以背叛这个浩浩汤汤超过五千年的语境？为什么可以背叛这个浩浩汤汤超过五千年的传统？</p><p>…你可以说他们的思想体系非常畸形，可以你能说他们的思想体系不精美，甚至，不美吗？</p><p>…我们认为一个真正的文人应该千锤百炼的真心，到最后回归竟然只变成是食色性也而已。</p><p>…我想要叩问的问题是：艺术它是否可以含有巧言令色的成分？</p><p>…会不会，艺术从来就只是巧言令色而已呢？所谓的艺术家，他们不停地创新艺术形式，翻花绳一样各种形变、各种质变。但是这些技法，会不会也是一种巧言令色而已呢？“</p></blockquote>          </div>        <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-mURcJbLd" src="//player.bilibili.com/player.html?bvid=BV14x411m71e&page=1&high_quality=1&danmaku=true"            allowfullscreen="no"            scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-mURcJbLd").style.height=document.getElementById("mmedia-mURcJbLd").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-mURcJbLd").style.height=document.getElementById("mmedia-mURcJbLd").scrollWidth*0.76+"px";            };        </script>        <h1 id="盛唐"><a href="#盛唐" class="headerlink" title="盛唐"></a>盛唐</h1><p>贺知章是响应陈子昂号召的第一批人之一，写过《咏柳》和《回乡偶书二首》，还作为伯乐提携了李白。作为同时经历初唐和盛唐的人，他起到了重要的纽带作用。</p><p>同样有承上启下作用的代表人物还有张九龄，他仕途通达，曾官至宰相，举荐过孟浩然、王维等人。之后他因劝谏被贬，从此诗兴大发，其思念妻子的<a href="https://baike.baidu.com/item/%E6%9C%9B%E6%9C%88%E6%80%80%E8%BF%9C/2798462">《望月怀远》</a>成为千古名篇。</p><blockquote><ul><li>海上生明月，天涯共此时。——张九龄《望月怀远》</li><li>草木有本心，何求美人折？——张九龄《<a href="https://baike.baidu.com/item/%E6%84%9F%E9%81%87%E5%8D%81%E4%BA%8C%E9%A6%96">感遇十二首</a>（其一）》</li></ul></blockquote><p>盛唐有很多不同流派，其中的代表有<strong>边塞诗派</strong>和<strong>山水田园诗派</strong>，接下来分别聊一聊。</p><h2 id="边塞诗派"><a href="#边塞诗派" class="headerlink" title="边塞诗派"></a>边塞诗派</h2><p>唐太宗以来的几个皇帝发起来从反侵略到”开边“的一系列军事战争，这促进里边塞诗派的发展。边塞诗主要描写<strong>边塞景色</strong>和<strong>军旅生活</strong>。</p><p>边塞景色描写既有写实的，也有浪漫的：</p><blockquote><p>大漠孤烟直，长河落日圆。——王维<a href="https://baike.baidu.com/item/%E4%BD%BF%E8%87%B3%E5%A1%9E%E4%B8%8A/">《使至塞上》</a></p><p>燕山雪花大如席，片篇垂落轩辕台。——李白<a href="https://baike.baidu.com/item/%E5%8C%97%E9%A3%8E%E8%A1%8C/">《北风行》</a></p></blockquote><p>而对于军旅生活，有写日常的，有写思乡的，也有描写反战情怀的。</p><h3 id="王翰"><a href="#王翰" class="headerlink" title="王翰"></a>王翰</h3><p>边塞诗派代表人物很多。其中，<a href="https://baike.baidu.com/item/%E7%8E%8B%E7%80%9A/70275?fromtitle=%E7%8E%8B%E7%BF%B0">王翰</a>性格叛逆，豪放不羁，一生都处在青春期，且诗如其人。《旧唐书》本传中记载，王翰登第后，“并州长史张嘉贞奇其才，礼接甚厚，翰感之，撰乐词以叙情，于席上自唱自舞，神气豪迈。张说镇并州，礼翰益至。” 与他同时代的边塞诗人还有李颀、王之涣等。</p><p>附：<a href="https://so.gushiwen.org/authors/authorvsw_2f56f31e2127A1.aspx">王翰诗文全集</a></p><blockquote><p>葡萄美酒夜光杯，欲饮琵琶马上催。醉卧沙场君莫笑，古来征战几人回。——王翰《凉州词》</p></blockquote><h3 id="其他诗人"><a href="#其他诗人" class="headerlink" title="其他诗人"></a>其他诗人</h3><p>高适</p><p>…我决定本篇太监，《在唐诗里孤独漫步》相较于这本快餐式的罗列风格来说，更加值得总结。</p>]]></content>
    
    
    <categories>
      
      <category>文学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>读书笔记</tag>
      
      <tag>文学</tag>
      
      <tag>古代文学</tag>
      
      <tag>诗词</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
